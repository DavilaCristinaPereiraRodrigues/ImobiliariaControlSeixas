package model.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import model.Fiador;
import util.Conexao;
import util.Configurador;

public class FiadorDAO {

	Configurador config = new Configurador();

	String url;
	String driver;
	String login;
	String senha;

	public FiadorDAO() {

		url = config.getUrl();
		driver = config.getDriver();
		login = config.getLogin();
		senha = config.getSenha();

	}// fim do fiadorDAO

	public static Fiador incluirFiador(String cpf_fiador, String nome, String telefone, String email,
			String profissao, String complemento, String cep) {//Pois endereco só esta com id

		Fiador fiador = null;
		FiadorDAO fiaDAO = new FiadorDAO();

		try {
			// Criação do insert
			String sql = "insert into fiador(id_fiador, cpf_fiador ,nome , telefone, email, profissao, complemento, fk_id) "
					+ "values (null,? ,? ,?, ? ,? ,?, (select id from base_cep where cep = ? ))";
			//id do endereço
			
			// Obter a conexão com o BD
			Conexao conex = new Conexao(fiaDAO.url, fiaDAO.driver,
					fiaDAO.login, fiaDAO.senha);

			// Abrir a conexao
			Connection con = conex.obterConexao();

			// Preparar o comando para ser executado
			PreparedStatement comando = con.prepareStatement(sql);
			//comando.setInt(1, id_fiador);
			comando.setString(1, cpf_fiador);
			comando.setString(2, nome);
			comando.setString(3, telefone);
			comando.setString(4, email);
			comando.setString(5, profissao);
			comando.setString(6, complemento);
			comando.setString(7, cep);
			// Comando executado
			comando.executeUpdate();

		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		
		fiador = new Fiador(cpf_fiador, nome, telefone, email, profissao, complemento);//retornar só isto pro fiador
		//volta sem o id_endereco

		return fiador;
	}// fim do incluirfiador
	
	
//Tela pra pesquisar o Fiador
	
public static List<Fiador> buscarFiador(String cpf_fiador) {  
		
		
	List<Fiador> fiador = null;

		FiadorDAO fiadorDAO = new FiadorDAO();
		try {
			// Criação do select
			
			//PESQUISAR PELO NOME e seu Id

			String sql = "select * from fiador where cpf_fiador = ? ";

			// Obter a conexão com o BD
			Conexao conex = new Conexao(fiadorDAO.url, fiadorDAO.driver,
					fiadorDAO.login, fiadorDAO.senha);

			// Abrir a conexao
			Connection con = conex.obterConexao();

			// Preparar o comando para ser executado
			PreparedStatement comando = con.prepareStatement(sql);


			comando.setString(1, cpf_fiador);
				
			ResultSet rs = comando.executeQuery();
			
			fiador = new ArrayList<Fiador>();

			while (rs.next()) {
				fiador.add(new Fiador(rs.getInt("id_fiador"),
						rs.getString("cpf_fiador"), rs.getString("nome"),
						rs.getString("telefone"),
						rs.getString("email"), rs.getString("profissao"), rs.getString("complemento")));
			}

			rs.close();
			comando.close();
			con.close();

		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		return fiador;
	}	//fim do buscar fiador


public static Fiador buscarFiadorCpf(String cpf_fiador) {  
	
	
	Fiador fiador = null;

		FiadorDAO fiadorDAO = new FiadorDAO();
		try {
			// Criação do select
			
			//PESQUISAR PELO NOME e seu Id

			String sql = "select * from fiador where cpf_fiador = ? ";

			// Obter a conexão com o BD
			Conexao conex = new Conexao(fiadorDAO.url, fiadorDAO.driver,
					fiadorDAO.login, fiadorDAO.senha);

			// Abrir a conexao
			Connection con = conex.obterConexao();

			// Preparar o comando para ser executado
			PreparedStatement comando = con.prepareStatement(sql);


			comando.setString(1, cpf_fiador);
				
			ResultSet rs = comando.executeQuery();
			
			
			if (rs.next()) {
				fiador = new Fiador(rs.getInt("id_fiador"),
						rs.getString("cpf_fiador"), rs.getString("nome"),
						rs.getString("telefone"),
						rs.getString("email"), rs.getString("profissao"), rs.getString("complemento"),
						rs.getInt("fk_id"));
			}

			rs.close();
			comando.close();
			con.close();

		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		return fiador;
	}	//fim do buscar fiador

	public static Fiador excluirFiador(String cpf_fiador) {
		Fiador fiador = null;
		FiadorDAO fiaDAO = new FiadorDAO();

		try {
			
			String sql = "insert into morto_fiador (select id_fiador, cpf_fiador ,nome , telefone, email, profissao, complemento, fk_id "
					+ " from fiador where cpf_fiador = ?)";
					
			// Criação do delete
			String sql1 = "delete from fiador where cpf_fiador = ?";

			// Obter a conexão com o BD
			Conexao conex = new Conexao(fiaDAO.url, fiaDAO.driver,
					fiaDAO.login, fiaDAO.senha);

			// Abrir a conexao
			Connection con = conex.obterConexao();
			Connection con1 = conex.obterConexao();

			// Preparar o comando para ser executado
			PreparedStatement comando = con.prepareStatement(sql);
			PreparedStatement comando1 = con1.prepareStatement(sql1);
			
			comando.setString(1, cpf_fiador);
			comando1.setString(1, cpf_fiador);
			
			// Comando executado
			comando.executeUpdate();
			comando1.executeUpdate();

		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		return fiador;
	}// fim do excluirFiador();
	
	
	public static Fiador alterarFiador( 
			String cpf_fiador, String nome, String telefone, String email,
			String profissao, String complemento, String cep ) { //não coloquei p/ alterar o id pois será auto_increment
		            //int id refere-se a endereço
		
		Fiador fiador = null;
		FiadorDAO fiaDAO = new FiadorDAO();

		try {
			// Criação do update
			String sql = "update fiador set cpf_fiador = ?, nome = ?, telefone = ?," +
				"email = ? , profissao = ?, complemento = ?, fk_id ="
				+ " (select id from base_cep where cep= ? )  where cpf_fiador = ?";
			//Select para selecionar a id do endereço para mandar alterar
			
			
			// Obter a conexão com o BD
			Conexao conex = new Conexao( fiaDAO.url, fiaDAO .driver,
					fiaDAO .login, fiaDAO.senha);

			// Abrir a conexao
			Connection con = conex.obterConexao();

			// Preparar o comando para ser executado
			PreparedStatement comando = con.prepareStatement(sql);
			
			comando.setString(1, cpf_fiador);
			comando.setString(2, nome);
			comando.setString(3, telefone);
			comando.setString(4, email);
			comando.setString(5, profissao);
			comando.setString(6, complemento);
			comando.setString(7, cep);
			comando.setString(8, cpf_fiador);
			
			// Comando executado
			
			comando.executeUpdate();

		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		return fiador;
	}// fim do alterarFiador();

	
	//Incluindo no Morto
	

	
}// fim da classe
