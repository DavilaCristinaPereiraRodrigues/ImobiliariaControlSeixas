package view;

import javax.swing.JFrame;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

import model.Endereco;
import model.DAO.ClienteDAO;
import model.DAO.ContratoAluguelDAO;
import model.DAO.EnderecoDAO;
import model.DAO.ImovelDAO;
import model.DAO.ProprietarioDAO;
import model.Proprietario;

public class Imovel extends JFrame {

	// Varíaveis globais
	String cep;
	String cpf_prop;

	JTextField txtCodigo;
	JTextField txtValor;
	JTextField txtDataAvaliacao;
	JTextField txtTotal;
	JTextField txtUtil;
	JTextField txtConstruida;
	JTextField txtReferencias;
	JTextField txtLogradouro;
	JTextField txtComplemento;
	JTextField txtCep;
	JTextField txtCidade;
	JTextField txtBairro;
	JTextField txtEstado;
	JTextField txtCpf;
	JTextField txtNome;

	public static void main(String[] args) {

		try {
			new Imovel();
			// imovel.setVisible(true);
			// imovel.setResizable(false); //bloqueia o redimensionamento da
			// tela

			// imovel.setLocationRelativeTo(null); //Centraliza a janela

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public Imovel() {
		super("Cadastro de Imóvel");

		// Cor do menu para colocar azul, o plano de fundo
		getContentPane().setBackground(new Color(135, 206, 250));
		getContentPane().setFont(new Font("Calibri", Font.PLAIN, 14));

		setTitle("Imóveis");
		// aqui e DISPOSE_ON_CLOSE para sair so da classe sem sai do menu
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 0, 931, 654);
		getContentPane().setLayout(null);

		JLabel lblNegocio = new JLabel("Negócio");
		lblNegocio.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblNegocio.setBounds(282, 41, 68, 17);
		getContentPane().add(lblNegocio);

		JLabel lblCodigo = new JLabel("Código");
		lblCodigo.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblCodigo.setBounds(98, 41, 85, 17);
		getContentPane().add(lblCodigo);

		txtCodigo = new JTextField();
		txtCodigo.setHorizontalAlignment(SwingConstants.LEFT);
		txtCodigo.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtCodigo.setColumns(10);
		txtCodigo.setBounds(95, 65, 110, 20);
		getContentPane().add(txtCodigo);

		txtValor = new JTextField();
		txtValor.setHorizontalAlignment(SwingConstants.LEFT);
		txtValor.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtValor.setColumns(10);
		txtValor.setBounds(436, 65, 143, 20);
		getContentPane().add(txtValor);

		JLabel lblPosicao = new JLabel("Posição");
		lblPosicao.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblPosicao.setBounds(282, 108, 75, 17);
		getContentPane().add(lblPosicao);

		JLabel lblValor = new JLabel("Valor");
		lblValor.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblValor.setBounds(439, 41, 46, 17);
		getContentPane().add(lblValor);

		JComboBox cbPosicao = new JComboBox(new Object[] { "Frente", "Fundos" });
		cbPosicao.setFont(new Font("Calibri", Font.PLAIN, 18));
		cbPosicao.setBounds(282, 136, 124, 20);
		getContentPane().add(cbPosicao);

		JComboBox cbtipoPagamento = new JComboBox(new Object[] { "Financiado",
				"À vista" });
		cbtipoPagamento.setFont(new Font("Calibri", Font.PLAIN, 18));
		cbtipoPagamento.setBounds(439, 136, 143, 20);
		getContentPane().add(cbtipoPagamento);

		JLabel lblTipoDePagamento = new JLabel("Tipo de Pagamento");
		lblTipoDePagamento.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblTipoDePagamento.setBounds(439, 108, 143, 17);
		getContentPane().add(lblTipoDePagamento);

		JLabel lblStatus = new JLabel("Status");
		lblStatus.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblStatus.setBounds(608, 41, 46, 17);
		getContentPane().add(lblStatus);

		JComboBox cbStatus = new JComboBox(new Object[] { "Livre", "Alugado",
				"Vendido" });
		cbStatus.setFont(new Font("Calibri", Font.PLAIN, 18));
		cbStatus.setBounds(608, 65, 110, 20);
		getContentPane().add(cbStatus);

		JLabel lblEstrutura = new JLabel("Estrutura");
		lblEstrutura.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblEstrutura.setBounds(95, 108, 75, 17);
		getContentPane().add(lblEstrutura);

		JLabel lblDataDeAvaliacao = new JLabel("Data de Avalia\u00E7\u00E3o");
		lblDataDeAvaliacao.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblDataDeAvaliacao.setBounds(608, 108, 151, 17);
		getContentPane().add(lblDataDeAvaliacao);

		txtDataAvaliacao = new JTextField();
		txtDataAvaliacao.setHorizontalAlignment(SwingConstants.LEFT);
		txtDataAvaliacao.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtDataAvaliacao.setColumns(10);
		txtDataAvaliacao.setBounds(608, 136, 151, 20);
		getContentPane().add(txtDataAvaliacao);

		JLabel lblQuartos = new JLabel("Quartos");
		lblQuartos.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblQuartos.setBounds(200, 176, 68, 17);
		getContentPane().add(lblQuartos);

		JComboBox cbQuartos = new JComboBox(new Object[] { "1", "2", "3", "4",
				"5" });
		cbQuartos.setFont(new Font("Calibri", Font.PLAIN, 18));
		cbQuartos.setBounds(200, 201, 59, 20);
		getContentPane().add(cbQuartos);

		JLabel lblCmodos = new JLabel("C\u00F4modos");
		lblCmodos.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblCmodos.setBounds(95, 173, 75, 17);
		getContentPane().add(lblCmodos);

		JComboBox cbComodos = new JComboBox(new Object[] { "1", "2", "3", "4",
				"5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15",
				"16", "17", "18", "19", "20" });
		cbComodos.setFont(new Font("Calibri", Font.PLAIN, 18));
		cbComodos.setBounds(95, 201, 68, 20);
		getContentPane().add(cbComodos);

		JComboBox cbEstrutura = new JComboBox(new Object[] { "Linear",
				"Duplex", "Triplex" });
		cbEstrutura.setFont(new Font("Calibri", Font.PLAIN, 18));
		cbEstrutura.setBounds(95, 136, 137, 20);
		getContentPane().add(cbEstrutura);

		JComboBox cbNegocio = new JComboBox(new Object[] { "Locação", "Venda" });
		cbNegocio.setFont(new Font("Calibri", Font.PLAIN, 18));
		cbNegocio.setBounds(282, 65, 125, 20);
		getContentPane().add(cbNegocio);

		JLabel lblVagasNaGaragem = new JLabel("Garagem");
		lblVagasNaGaragem.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblVagasNaGaragem.setBounds(282, 176, 85, 17);
		getContentPane().add(lblVagasNaGaragem);

		JComboBox cbVagas = new JComboBox(new Object[] { "0", "1", "2", "3",
				"4", "5" });
		cbVagas.setFont(new Font("Calibri", Font.PLAIN, 18));
		cbVagas.setBounds(282, 201, 59, 20);
		getContentPane().add(cbVagas);

		// Descrição para ser um campo grande criamos o JEditorPane
		JEditorPane dtrpnDescricao = new JEditorPane();
		dtrpnDescricao.setFont(new Font("Calibri", Font.PLAIN, 18));
		dtrpnDescricao.setBounds(683, 334, 175, 179);
		getContentPane().add(dtrpnDescricao);

		JLabel lblArea = new JLabel("\u00C1rea");
		lblArea.setForeground(Color.WHITE);
		lblArea.setFont(new Font("Calibri", Font.PLAIN, 20));
		lblArea.setBounds(156, 406, 68, 32);
		getContentPane().add(lblArea);

		JLabel lblTotal = new JLabel("Total");
		lblTotal.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblTotal.setBounds(220, 393, 46, 17);
		getContentPane().add(lblTotal);

		txtTotal = new JTextField();
		txtTotal.setHorizontalAlignment(SwingConstants.LEFT);
		txtTotal.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtTotal.setColumns(10);
		txtTotal.setBounds(220, 412, 93, 20);
		getContentPane().add(txtTotal);

		JLabel lblUtil = new JLabel("\u00DAtil");
		lblUtil.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblUtil.setBounds(455, 393, 33, 17);
		getContentPane().add(lblUtil);

		txtUtil = new JTextField();
		txtUtil.setHorizontalAlignment(SwingConstants.LEFT);
		txtUtil.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtUtil.setColumns(10);
		txtUtil.setBounds(340, 412, 93, 20);
		getContentPane().add(txtUtil);

		JLabel lblConstruida = new JLabel("Constru\u00EDda");
		lblConstruida.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblConstruida.setBounds(340, 393, 93, 17);
		getContentPane().add(lblConstruida);

		txtConstruida = new JTextField();
		txtConstruida.setToolTipText("\u00C1rea em m2");
		txtConstruida.setHorizontalAlignment(SwingConstants.LEFT);
		txtConstruida.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtConstruida.setColumns(10);
		txtConstruida.setBounds(455, 412, 90, 20);
		getContentPane().add(txtConstruida);

		JLabel lblReferencia = new JLabel("Refer\u00EAncias");
		lblReferencia.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblReferencia.setBounds(400, 175, 125, 17);
		getContentPane().add(lblReferencia);

		txtReferencias = new JTextField();
		txtReferencias.setHorizontalAlignment(SwingConstants.LEFT);
		txtReferencias.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtReferencias.setColumns(10);
		txtReferencias.setBounds(399, 201, 273, 20);
		getContentPane().add(txtReferencias);

		JLabel lblDescricao = new JLabel("Descri\u00E7\u00E3o");
		lblDescricao.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblDescricao.setBounds(683, 302, 125, 17);
		getContentPane().add(lblDescricao);

		JLabel lblLogradouro = new JLabel("Logradouro");
		lblLogradouro.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblLogradouro.setBounds(282, 236, 105, 17);
		getContentPane().add(lblLogradouro);

		txtLogradouro = new JTextField();
		txtLogradouro.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtLogradouro.setEditable(false);
		txtLogradouro.setColumns(10);
		txtLogradouro.setBounds(282, 265, 356, 20);
		getContentPane().add(txtLogradouro);

		JLabel lblComplemento = new JLabel("Complemento");
		lblComplemento.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblComplemento.setBounds(683, 236, 110, 17);
		getContentPane().add(lblComplemento);

		txtComplemento = new JTextField();
		txtComplemento.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtComplemento.setColumns(10);
		txtComplemento.setBounds(683, 265, 125, 20);
		getContentPane().add(txtComplemento);

		JLabel lblCep = new JLabel("CEP");
		lblCep.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblCep.setBounds(95, 236, 46, 17);
		getContentPane().add(lblCep);

		txtCep = new JTextField();
		txtCep.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtCep.setColumns(10);
		txtCep.setBounds(95, 265, 115, 20);
		getContentPane().add(txtCep);

		JLabel lblCidade = new JLabel("Cidade");
		lblCidade.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblCidade.setBounds(95, 303, 76, 17);
		getContentPane().add(lblCidade);

		txtCidade = new JTextField();
		txtCidade.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtCidade.setEditable(false);
		txtCidade.setColumns(10);
		txtCidade.setBounds(95, 328, 204, 20);
		getContentPane().add(txtCidade);

		JLabel lblBairro = new JLabel("Bairro");
		lblBairro.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblBairro.setBounds(321, 303, 46, 17);
		getContentPane().add(lblBairro);

		txtBairro = new JTextField();
		txtBairro.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtBairro.setEditable(false);
		txtBairro.setColumns(10);
		txtBairro.setBounds(321, 328, 164, 20);
		getContentPane().add(txtBairro);

		JLabel lblEstado = new JLabel("Estado");
		lblEstado.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblEstado.setBounds(503, 303, 84, 17);
		getContentPane().add(lblEstado);

		txtEstado = new JTextField();
		txtEstado.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtEstado.setEditable(false);
		txtEstado.setColumns(10);
		txtEstado.setBounds(503, 328, 76, 20);
		getContentPane().add(txtEstado);

		JButton btnPesquisarCep = new JButton("");
		btnPesquisarCep.setToolTipText("Buscar Cep");
		btnPesquisarCep.setIcon(new ImageIcon("img\\magnifier13.png"));
		btnPesquisarCep.setBounds(220, 265, 33, 20);
		btnPesquisarCep.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {

				String cep = txtCep.getText().toString();
				// JOptionPane.showMessageDialog(null, cep);

				Endereco endereco = EnderecoDAO.buscarEndereco(cep);

				String logradouro = endereco.getLogradouro();
				txtLogradouro.setText(logradouro);

				String bairro = endereco.getBairro();
				txtBairro.setText(bairro);

				String cidade = endereco.getCidade();
				txtCidade.setText(cidade);

				String estado = endereco.getEstado();
				txtEstado.setText(estado);

			}
		});

		getContentPane().add(btnPesquisarCep);

		// BOTÕES

		JButton btnSalvar = new JButton("Salvar");
		// Colocar um texto assim que ele passar em cima debotão
		btnSalvar.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {

				int codigo = (Integer.parseInt(txtCodigo.getText())); // convertendo
																		// para
																		// int
				String tp_negocio = (String) cbNegocio.getSelectedItem();
				String tp_pos = (String) cbPosicao.getSelectedItem();
				String tp_status = (String) cbStatus.getSelectedItem();
				String tp_est = (String) cbEstrutura.getSelectedItem();
				String tp_pag = (String) cbtipoPagamento.getSelectedItem();
				double valor = (Double.parseDouble(txtValor.getText())); // convertendo
																			// para
																			// double
				String referencias = txtReferencias.getText();
				String descricao = dtrpnDescricao.getText();
				String area_total = txtTotal.getText();
				String area_cons = txtConstruida.getText();
				String area_util = txtUtil.getText();
				String qtd_comodos = (String) cbComodos.getSelectedItem();
				String qtd_quartos = (String) cbQuartos.getSelectedItem();
				String vaga_garagem = (String) cbVagas.getSelectedItem();
				String dt_avaliacao = txtDataAvaliacao.getText();
				String complemento = txtComplemento.getText();
				String cep = txtCep.getText();
				String cpf_prop = txtCpf.getText();

				int opt1 = JOptionPane.showConfirmDialog(null,
						"Deseja salvar as alterações? ");

				switch (opt1) {

				case JOptionPane.YES_OPTION:
					// Se clicar em Sim inclui o imovel

					ImovelDAO.incluirImovel(codigo, tp_negocio, tp_pos,
							tp_status, tp_est, tp_pag, valor, referencias,
							descricao, area_total, area_cons, area_util,
							qtd_comodos, qtd_quartos, vaga_garagem,
							dt_avaliacao, complemento, cep, cpf_prop);

					JOptionPane.showMessageDialog(null,
							"Cliente salvo com Sucesso! ");

					break;

				case JOptionPane.NO_OPTION:

					break;

				}// fim do switch
			}
		});// fim do Action Listener

		btnSalvar.setToolTipText("Salvar Imovel");
		btnSalvar.setFont(new Font("Calibri", Font.PLAIN, 13));
		btnSalvar.setBounds(258, 557, 89, 23);
		getContentPane().add(btnSalvar);

		JButton btnExcluir = new JButton("Excluir");
		// Colocar um texto assim que ele passar em cima debotão
		btnExcluir.setToolTipText("Excluir Imovel");
		btnExcluir.setFont(new Font("Calibri", Font.PLAIN, 13));
		btnExcluir.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {

				int codigo = (Integer.parseInt(txtCodigo.getText()));

				int opt1 = JOptionPane.showConfirmDialog(null,
						"Tem certeza que deseja excluir ? ");

				switch (opt1) {

				case JOptionPane.YES_OPTION:
					// Se clicar em Sim inclui o imovel

					ImovelDAO.excluirImovel(codigo);

					JOptionPane.showMessageDialog(null,
							"Imóvel excluído com Sucesso! ");
					break;

				case JOptionPane.NO_OPTION:

					break;

				}// fim do switch

			}
		});

		btnExcluir.setBounds(515, 557, 89, 23);
		getContentPane().add(btnExcluir);

		JLabel lblProp = new JLabel("Propriet\u00E1rio");
		lblProp.setForeground(Color.WHITE);
		lblProp.setFont(new Font("Calibri", Font.PLAIN, 20));
		lblProp.setBounds(95, 471, 110, 17);
		getContentPane().add(lblProp);

		JLabel lblCpf = new JLabel("CPF");
		lblCpf.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblCpf.setBounds(220, 449, 46, 17);
		getContentPane().add(lblCpf);

		JLabel lblNome = new JLabel("Nome");
		lblNome.setFont(new Font("Calibri", Font.PLAIN, 18));
		lblNome.setBounds(453, 443, 46, 17);
		getContentPane().add(lblNome);

		txtCpf = new JTextField();
		txtCpf.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtCpf.setToolTipText("Cpf do Proprietário");
		txtCpf.setBounds(220, 470, 151, 20);
		getContentPane().add(txtCpf);
		txtCpf.setColumns(10);

		txtNome = new JTextField();
		txtNome.setFont(new Font("Calibri", Font.PLAIN, 18));
		txtNome.setToolTipText("Nome do Proprietário");
		txtNome.setEditable(false);
		txtNome.setBounds(453, 470, 217, 20);
		getContentPane().add(txtNome);
		txtNome.setColumns(10);

		JButton btnPesquisarProp = new JButton("");
		btnPesquisarProp.setIcon(new ImageIcon("img\\magnifier13.png"));
		btnPesquisarProp.setToolTipText("Buscar Cpf do Proprietário");
		btnPesquisarProp.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent arg0) {

				String cpf_prop = txtCpf.getText();

				Proprietario proprietario = ProprietarioDAO
						.buscarProprietarioCPF_PROP(cpf_prop); // NÃO ESQUECER
																// DE DAR UM
																// IMPORT NO
																// CLIENTE DO
																// MODEL

				// Verificar se o cliente existe no Banco de Dados e vem com
				// os dados completo do cliente id, nome, telefone
				if (proprietario == null) {

					JOptionPane.showMessageDialog(null,
							"Cliente não cadastrado");

				} else {
					/*
					 * JOptionPane.showMessageDialog(null,
					 * "Dados do cliente \n " + cliente);//está pegando //o
					 * método toString no model Cliente e jogando neste
					 * showMessage
					 */

					int opt2 = JOptionPane.showConfirmDialog(null,
							"Dados do proprietário\n " + proprietario,
							"Proprietário", JOptionPane.OK_CANCEL_OPTION); // o

					switch (opt2) {
					case JOptionPane.CANCEL_OPTION:
						JOptionPane.showMessageDialog(null,
								"Você clicou em \"Cancelar\"");
						break;

					case JOptionPane.OK_OPTION:
						JOptionPane.showMessageDialog(null,
								"Dados inseridos com Sucesso");
						// Se clicar em OK joga o os dados do proprietário na
						// tela salvando-o

						String nome = proprietario.getNome();

						txtNome.setText(nome);
						break;

					default:
						JOptionPane.showMessageDialog(null,
								"Você fechou a janela");
						break;
					}// fim do switch

				}
			}
		});

		btnPesquisarProp.setBounds(377, 469, 33, 20);
		getContentPane().add(btnPesquisarProp);

		JButton btnPesqImovel = new JButton("");
		btnPesqImovel.setIcon(new ImageIcon("img\\magnifier13.png"));
		btnPesqImovel.setToolTipText("Buscar Cpf do Propriet\u00E1rio");
		btnPesqImovel.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent arg0) {

				int codigo = (Integer.parseInt(txtCodigo.getText())); // convertendo
				// para
				// int

				model.Imovel imovelmd = ImovelDAO.buscarImovelCodigo(codigo);
				//System.out.println(imovel);

				if (imovelmd != null) {

					String tp_negocio = imovelmd.getTp_negocio();//pega do imovelmd
					cbNegocio.setSelectedItem(tp_negocio); //empura pra tela

					String tp_pos = imovelmd.getTp_pos();
					cbPosicao.setSelectedItem(tp_pos);

					String tp_status = imovelmd.getTp_status();
					cbStatus.setSelectedItem(tp_status);

					String tp_est = imovelmd.getTp_est();
					cbEstrutura.setSelectedItem(tp_est);

					String tp_pag = imovelmd.getTp_pag();
					cbtipoPagamento.setSelectedItem(tp_pag);
					
					String qtd_comodos = imovelmd.getQtd_comodos();
					cbComodos.setSelectedItem(qtd_comodos);
					
					String qtd_quartos =  imovelmd.getQtd_quartos();
					cbQuartos.setSelectedItem(qtd_quartos);
					
					String vaga_garagem = imovelmd.getVaga_garagem();
					cbVagas.setSelectedItem(vaga_garagem);
					
					
					//double valor=Double.parseDouble(txtValor.getText()); 
					//txtValor.setText(valor + ""); //gabiara
					
					double valor = imovelmd.getValor(); // convertendo
					txtValor.setText(String.valueOf(valor)); 
					
					//txtValor.setText(valor + ""); //gabiara
					
				
					String referencias = imovelmd.getReferencias();
					txtReferencias.setText(referencias);
					
					String descricao = imovelmd.getDescricao();
					 dtrpnDescricao.setText(descricao);
					
					String area_total = imovelmd.getArea_total();
					txtTotal.setText(area_total);
					
					String area_cons = imovelmd.getArea_cons();
					txtConstruida.setText(area_cons);
					
					String area_util = imovelmd.getArea_util();
					txtUtil.setText(area_util);
					
					
					String dt_avaliacao = imovelmd.getDt_avaliacao();
					txtDataAvaliacao.setText(dt_avaliacao);
					
					String complemento = imovelmd.getComplemento();
					txtComplemento.setText(complemento);
					
					
				    //Endereço
					int idCep = imovelmd.getId_cep();
					//Prop
					int fk_prop = imovelmd.getFk_prop();
					
					Endereco endereco = EnderecoDAO.buscarEndereco(idCep);

					String cep = endereco.getCep();
					txtCep.setText(cep);

					String logradouro = endereco.getLogradouro();
					txtLogradouro.setText(logradouro);

					String bairro = endereco.getBairro();
					txtBairro.setText(bairro);

					String cidade = endereco.getCidade();
					txtCidade.setText(cidade);

					String estado = endereco.getEstado();
					txtEstado.setText(estado);
					
					//Proprietário
					
										
					Proprietario proprietario = ProprietarioDAO.buscarProprietariofkProp(fk_prop);
					
					String nome = proprietario.getNome();
					txtNome.setText(nome);
					
					String cpf_prop = proprietario.getCpf_prop();
					txtCpf.setText(cpf_prop);
					
					

				} else { // se não estiver cadastrado um cpf no cliente amostra
							// o JoptionPANE

					JOptionPane.showMessageDialog(null, "Código não cadastrado",
							"Erro", JOptionPane.ERROR_MESSAGE);

				}

			}// fim do buscarCliente

		});
		btnPesqImovel.setBounds(215, 65, 33, 20);
		getContentPane().add(btnPesqImovel);

		// imagem de fundo
		JLabel lblImagem = new JLabel("imagem");
		lblImagem.setFont(new Font("Calibri", Font.PLAIN, 14));
		lblImagem.setIcon(new ImageIcon("img\\1 (1).png"));
		lblImagem.setBounds(0, -4, 1024, 728);
		getContentPane().add(lblImagem);

		setVisible(true);
		setResizable(false);// Fazer que a tela não redimensione
		setLocationRelativeTo(null);// Fazer que a tela abra no centro
	}
}
